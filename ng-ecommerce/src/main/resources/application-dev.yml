spring:
  threads:
    virtual:
      enabled: true
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9090/realms/NG
      client:
        registration:
          client:
            clientId: ng-ecommerce
            clientSecret: gmUyVP1fuZXJGOq9Be7fAKAPGuIwpNN9
            authorizationGrantType: client_credentials
            provider: keycloak-provider  # Refers to the provider defined below
        provider:
          keycloak-provider:
            token-uri: http://localhost:9090/realms/NG/protocol/openid-connect/token


#resilience4j:
#  circuitbreaker:
#    instances:
#      getUserProduct:
#        slidingWindowType: COUNT_BASED
#        slidingWindowSize: 5
#        failureRateThreshold: 50
#        waitDurationInOpenState: 10000
#        permittedNumberOfCallsInHalfOpenState: 3
#        automaticTransitionFromOpenToHalfOpenEnabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 50
        registerHealthIndicator: true
        allowHealthIndicatorToFail: false
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        waitDurationInOpenState: 50000
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 1000
        retryExceptions:
          - java.lang.Exception



server:
  port: 8081
  servlet:
    context-path: /main/
logging:
  level:
#    io.github.resilience4j.retry: DEBUG
#    com.ng.ngmicrosrvices.ng_ecommerce.httpclient: DEBUG
    io.github.resilience4j.circuitbreaker: DEBUG
    io.github.resilience4j.retry: DEBUG
management:
  endpoints.web.exposure.include:
    - '*'
  endpoint.health.show-details: always
  health.circuitbreakers.enabled: true

